<%args>
$schema
$title => 'Genes'
$pub
@gene_list
@highlight_terms => ()
$curs_root_uri
$multi_organism_mode
$pathogen_host_mode
$confirm_genes
</%args>

<script language="javascript" type="text/javascript">
var confirmGenes = <% $confirm_genes ? 'true' : 'false' %>;
var highlightTerms = [<% join( ',', map { "'" . $_ . "'" } @highlight_terms ) %>];
var geneListData = <% $gene_list_data_js |n %>;
var hostsWithNoGenes = <% $hosts_with_no_genes_js |n %>;
</script>

<div id="curs-gene-list-edit" class="curs-box">
  <div class="curs-box-title">
<% $title %>
  </div>
  <div class="curs-box-body">
% if ($pathogen_host_mode) {
    <p><b>Note:</b> PHI-Canto does not use UniProt identifiers at taxonomic ranks lower than species. If you have entered UniProt identifiers that are at the strain or subspecies level, their corresponding NCBI Taxonomy identifiers will have been reassigned to the nearest species-level identifier (the UniProt identifier itself is not modified). Please use the 'experimental strains' field to specify lower taxonomic ranks (such as strains, pathovars, and subspecies).</p>
    <edit-organisms></edit-organisms>
% } else {
  <form name="gene-edit" method="get" action="<% $edit_path %>">
% if (scalar(@table_1_hashes) > 0 || scalar(@table_2_hashes) > 0) {
%   if (scalar(@table_1_hashes) > 0) {
%   if ($table_1_header) {
      <div class="curs-gene-list-edit-table-header"><% $table_1_header %></div>
%   }
  <& /curs/gene_list_edit_table.mhtml, col_names => \@col_names, gene_hashes => \@table_1_hashes &>
%   }

%   if (scalar(@table_2_hashes) > 0) {
%     if ($table_2_header) {
        <div class="curs-gene-list-edit-table-header"><% $table_2_header %></div>
%     }
  <& /curs/gene_list_edit_table.mhtml, col_names => \@col_names, gene_hashes => \@table_2_hashes &>
%   }
% } else {
  <div class="no-genes-message">
    [No genes]
  </div>
% }

% }

% if (!$pathogen_host_mode) {
<div class="submit">
  <input type="submit" class="btn btn-primary" name="continue" value="Continue"/>
</div>
<div class="submit">
  <input type="submit" class="btn btn-primary" name="submit" value="Remove selected"/>
</div>

<div class="upload-genes-link">
  <a href="<% $upload_path %>"><% $add_more_genes_message %></a>
</div>
</form>
%}
</div>
</div>

<%init>
use Canto::Curs;
use Canto::Track;
use Canto::Curs::GeneProxy;
use Canto::Track::StrainLookup;

my %highlight_terms = ();
@highlight_terms{@highlight_terms} = @highlight_terms;

sub _search_highlight
{
  my $highlight_terms = shift;
  my $identifier = shift;

  return '' if !defined $identifier;

  HTML::Mason::Escapes::basic_html_escape(\$identifier);

  if (exists $highlight_terms->{$identifier}) {
    return '<span class="curs-matched-search-term">' . $identifier . '</span>';
  } else {
    return $identifier;
  }
}

my %all_data = (
  default_organism => {},
);

if ($pathogen_host_mode) {
  $all_data{pathogen} = {};
  $all_data{host} = {};
}

my $strain_lookup = Canto::Track::StrainLookup->new(config => $c->config());

my @gene_hashes = map {
     my $gene = $_;
     my $gene_proxy =
       Canto::Curs::GeneProxy->new(config => $c->config(), cursdb_gene => $_);

     my $synonyms_string =
       join (', ', map { _search_highlight(\%highlight_terms, $_) } $gene_proxy->synonyms());
     my $hash = {
       'Systematic identifier' => _search_highlight(\%highlight_terms, $gene_proxy->primary_identifier()),
       Name => _search_highlight(\%highlight_terms, $gene_proxy->primary_name()),
       Product => $gene_proxy->product(),
       Synonyms => $synonyms_string,
       gene_id => $gene_proxy->gene_id(),
       annotation_count => $gene_proxy->cursdb_gene()
           ->all_annotations(include_with=>1)->count(),
       genotype_count => $gene_proxy->cursdb_gene()->genotypes()->count(),
     };

     my $organism_details = $gene_proxy->organism_details();

     my $taxonid = $organism_details->{taxonid};

     my %org_data;
     my $org_type = $organism_details->{pathogen_or_host};

     if ($org_type ne 'pathogen' && $org_type ne 'host') {
       $org_type = 'default_organism';
     }

     if (exists $all_data{$org_type}->{$taxonid}) {
       %org_data = %{$all_data{$org_type}->{$taxonid}};
     } else {
       %org_data = %$organism_details;
       delete $org_data{full_name};
       $org_data{genes} = [];
       $org_data{selected_strains} = [];
       $org_data{available_strains} = [$strain_lookup->lookup($taxonid)];

       $all_data{$org_type}->{$taxonid} = \%org_data;
     }

     push @{$org_data{genes}}, {
       systematic_identifier => $gene_proxy->primary_identifier(),
       name => $gene_proxy->primary_name(),
       product => $gene_proxy->product(),
       synonyms => [$gene_proxy->synonyms()],
       gene_id => $gene_proxy->gene_id(),
       annotation_count => $gene_proxy->cursdb_gene()
           ->all_annotations(include_with=>1)->count(),
       genotype_count => $gene_proxy->cursdb_gene()->genotypes()->count(),
     };

     if ($multi_organism_mode) {
       $hash->{Organism} = $organism_details->{full_name};
       $hash->{taxonid} = $organism_details->{taxonid};
       if ($pathogen_host_mode) {
         $hash->{pathogen_or_host} = $organism_details->{pathogen_or_host};
       }
     }
     $hash
   } @gene_list;

my @table_1_hashes = ();
my $table_1_header = undef;
my @table_2_hashes = ();
my $table_2_header = undef;

if ($pathogen_host_mode){
  $table_1_header = 'Pathogen genes:';
  $table_2_header = 'Host genes:';
  map {
    if ($_->{pathogen_or_host} eq 'host') {
      push @table_2_hashes, $_;
    } else {
      push @table_1_hashes, $_;
    }
  } @gene_hashes;
} else {
  @table_1_hashes = @gene_hashes;
}

my @col_names = ("Systematic identifier", "Name", "Synonyms", "Product");

if ($multi_organism_mode) {
  push @col_names, "Organism";
}

my $upload_path = "$curs_root_uri/gene_upload";
my $edit_path = "$curs_root_uri/edit_genes";

my $add_more_genes_message;

if ($c->config()->{pathogen_host_mode}) {
  $add_more_genes_message =
   'Add more genes and host organisms from ' . $pub->uniquename();
} else {
  $add_more_genes_message =
    'Add more genes from ' . $pub->uniquename();
}

my @hosts_with_no_genes = ();

if ($pathogen_host_mode) {
  use Canto::Track;
  my $organism_lookup = Canto::Track::get_adaptor($c->config(), 'organism');

  my @curs_host_organism_details =
    grep {
      $_->{pathogen_or_host} eq 'host';
    }
    map {
      my $curs_organism = $_;

      my $res = $organism_lookup->lookup_by_taxonid($curs_organism->taxonid());

      $res->{genotype_count} = $curs_organism->genotypes()->count();
      $res;
    } $schema->resultset('Organism')->all();

  my @host_organisms_from_genes = ();

  for my $gene ($schema->resultset('Gene')->all()) {
    my $this_gene_taxonid = $gene->organism()->taxonid();
    my $organism_details = $organism_lookup->lookup_by_taxonid($this_gene_taxonid);
    if ($organism_details->{pathogen_or_host} eq 'host') {
      if (!grep { $_->{taxonid} == $this_gene_taxonid } @host_organisms_from_genes) {
        push @host_organisms_from_genes, $organism_details;
      }
    }
  }

  my @no_gene_host_organisms =
    grep {
      my $host_org = $_;
      !grep { $_->{taxonid} == $host_org->{taxonid} } @host_organisms_from_genes;
    } @curs_host_organism_details;

  @hosts_with_no_genes = @no_gene_host_organisms;
}

%all_data = map {
  ($_, [values %{$all_data{$_}}])
} keys %all_data;

map {
  $_->{available_strains} = [$strain_lookup->lookup($_->{taxonid})];
} @hosts_with_no_genes;

my $gene_list_data_js = Data::JavaScript::Anon->anon_dump(\%all_data);
my $hosts_with_no_genes_js = Data::JavaScript::Anon->anon_dump(\@hosts_with_no_genes);
</%init>
